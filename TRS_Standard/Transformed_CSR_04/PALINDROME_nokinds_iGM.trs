(VAR I P V V1 V2 X X1 X2 Y Z )
(RULES 
        active(__(__(X,Y),Z)) -> mark(__(X,__(Y,Z)))
        active(__(X,nil)) -> mark(X)
        active(__(nil,X)) -> mark(X)
        active(and(tt,X)) -> mark(X)
        active(isList(V)) -> mark(isNeList(V))
        active(isList(nil)) -> mark(tt)
        active(isList(__(V1,V2))) -> mark(and(isList(V1),isList(V2)))
        active(isNeList(V)) -> mark(isQid(V))
        active(isNeList(__(V1,V2))) -> mark(and(isList(V1),isNeList(V2)))
        active(isNeList(__(V1,V2))) -> mark(and(isNeList(V1),isList(V2)))
        active(isNePal(V)) -> mark(isQid(V))
        active(isNePal(__(I,__(P,I)))) -> mark(and(isQid(I),isPal(P)))
        active(isPal(V)) -> mark(isNePal(V))
        active(isPal(nil)) -> mark(tt)
        active(isQid(a)) -> mark(tt)
        active(isQid(e)) -> mark(tt)
        active(isQid(i)) -> mark(tt)
        active(isQid(o)) -> mark(tt)
        active(isQid(u)) -> mark(tt)
        mark(__(X1,X2)) -> active(__(mark(X1),mark(X2)))
        mark(nil) -> active(nil)
        mark(and(X1,X2)) -> active(and(mark(X1),X2))
        mark(tt) -> active(tt)
        mark(isList(X)) -> active(isList(X))
        mark(isNeList(X)) -> active(isNeList(X))
        mark(isQid(X)) -> active(isQid(X))
        mark(isNePal(X)) -> active(isNePal(X))
        mark(isPal(X)) -> active(isPal(X))
        mark(a) -> active(a)
        mark(e) -> active(e)
        mark(i) -> active(i)
        mark(o) -> active(o)
        mark(u) -> active(u)
        __(mark(X1),X2) -> __(X1,X2)
        __(X1,mark(X2)) -> __(X1,X2)
        __(active(X1),X2) -> __(X1,X2)
        __(X1,active(X2)) -> __(X1,X2)
        and(mark(X1),X2) -> and(X1,X2)
        and(X1,mark(X2)) -> and(X1,X2)
        and(active(X1),X2) -> and(X1,X2)
        and(X1,active(X2)) -> and(X1,X2)
        isList(mark(X)) -> isList(X)
        isList(active(X)) -> isList(X)
        isNeList(mark(X)) -> isNeList(X)
        isNeList(active(X)) -> isNeList(X)
        isQid(mark(X)) -> isQid(X)
        isQid(active(X)) -> isQid(X)
        isNePal(mark(X)) -> isNePal(X)
        isNePal(active(X)) -> isNePal(X)
        isPal(mark(X)) -> isPal(X)
        isPal(active(X)) -> isPal(X)
        
)
    